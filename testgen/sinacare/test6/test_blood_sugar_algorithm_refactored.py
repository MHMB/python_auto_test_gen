# Automatically generated by Pynguin.
import pytest
import blood_sugar_algorithm_refactored as module_0
import datetime as module_1

@pytest.mark.xfail
def test_case_0():
    int_0 = 2469
    str_0 = "7m9h>\nPgQgiVpq*$'"
    datetime_0 = module_0.random_datetime()
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    module_0.BloodSugar(int_0, int_0, str_0, datetime_0)

@pytest.mark.xfail
def test_case_1():
    int_0 = -319
    datetime_0 = module_0.random_datetime()
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    str_0 = '8mNe:0\x0c+B^u'
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_1.MINYEAR == 1
    assert module_1.MAXYEAR == 9999
    blood_sugar_algorithm_0.set_prev_bs_info(int_0, datetime_0, str_0)

@pytest.mark.xfail
def test_case_2():
    bool_0 = True
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    bool_1 = blood_sugar_algorithm_0.set_patient_medical_record(bool_0, bool_0)
    assert bool_1 is True
    assert blood_sugar_algorithm_0.diabetes_type_1 is True
    module_1.datetime()

def test_case_3():
    bool_0 = False
    bool_1 = True
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    bool_2 = blood_sugar_algorithm_0.set_patient_medical_record(bool_0, bool_1)
    assert bool_2 is True
    assert blood_sugar_algorithm_0.diabetes_type_2 is True

def test_case_4():
    none_type_0 = None
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    str_0 = blood_sugar_algorithm_0.normal_person_bs(none_type_0)
    assert str_0 == 'SCBSN000'

def test_case_5():
    datetime_0 = module_0.random_datetime()
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']

def test_case_6():
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']

@pytest.mark.xfail
def test_case_7():
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    blood_sugar_algorithm_1 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_1.patient is None
    assert blood_sugar_algorithm_1.hypoglycemia is None
    assert blood_sugar_algorithm_1.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_1.abnormal_bs is None
    assert blood_sugar_algorithm_1.emergency_alarm is None
    assert blood_sugar_algorithm_1.bs_type is None
    assert blood_sugar_algorithm_1.new_measurement_required is None
    assert blood_sugar_algorithm_1.new_measurement_duration_min is None
    assert blood_sugar_algorithm_1.graphic_asset is None
    assert blood_sugar_algorithm_1.message_list == []
    assert blood_sugar_algorithm_1.last_bs is None
    blood_sugar_algorithm_0.init_data()

@pytest.mark.xfail
def test_case_8():
    int_0 = 177
    datetime_0 = module_0.random_datetime()
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    str_0 = 'W'
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_1.MINYEAR == 1
    assert module_1.MAXYEAR == 9999
    blood_sugar_algorithm_0.set_prev_bs_info(int_0, datetime_0, str_0)

@pytest.mark.xfail
def test_case_9():
    int_0 = 285
    int_1 = 768
    str_0 = 'FBS'
    datetime_0 = module_0.random_datetime()
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    module_0.BloodSugar(int_0, int_1, str_0, datetime_0)

@pytest.mark.xfail
def test_case_10():
    int_0 = 177
    datetime_0 = module_0.random_datetime()
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    int_1 = -2488
    none_type_0 = None
    module_0.BloodSugar(int_0, int_1, none_type_0, datetime_0)

@pytest.mark.xfail
def test_case_11():
    int_0 = 259
    none_type_0 = None
    str_0 = 'FBS'
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    bool_0 = blood_sugar_algorithm_0.set_prev_bs_info(int_0, none_type_0, str_0)
    assert bool_0 is True
    int_1 = 44
    blood_sugar_algorithm_1 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_1.patient is None
    assert blood_sugar_algorithm_1.hypoglycemia is None
    assert blood_sugar_algorithm_1.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_1.abnormal_bs is None
    assert blood_sugar_algorithm_1.emergency_alarm is None
    assert blood_sugar_algorithm_1.bs_type is None
    assert blood_sugar_algorithm_1.new_measurement_required is None
    assert blood_sugar_algorithm_1.new_measurement_duration_min is None
    assert blood_sugar_algorithm_1.graphic_asset is None
    assert blood_sugar_algorithm_1.message_list == []
    assert blood_sugar_algorithm_1.last_bs is None
    datetime_0 = module_0.random_datetime()
    str_1 = 'AV.'
    blood_sugar_algorithm_2 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_2.patient is None
    assert blood_sugar_algorithm_2.hypoglycemia is None
    assert blood_sugar_algorithm_2.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_2.abnormal_bs is None
    assert blood_sugar_algorithm_2.emergency_alarm is None
    assert blood_sugar_algorithm_2.bs_type is None
    assert blood_sugar_algorithm_2.new_measurement_required is None
    assert blood_sugar_algorithm_2.new_measurement_duration_min is None
    assert blood_sugar_algorithm_2.graphic_asset is None
    assert blood_sugar_algorithm_2.message_list == []
    assert blood_sugar_algorithm_2.last_bs is None
    assert module_1.MINYEAR == 1
    assert module_1.MAXYEAR == 9999
    blood_sugar_algorithm_2.set_prev_bs_info(int_1, datetime_0, str_1)

@pytest.mark.xfail
def test_case_12():
    none_type_0 = None
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    bool_0 = False
    bool_1 = True
    bool_2 = blood_sugar_algorithm_0.set_patient_medical_record(bool_1, bool_0)
    assert bool_2 is True
    assert blood_sugar_algorithm_0.diabetes_type_1 is True
    datetime_0 = module_0.random_datetime()
    none_type_1 = None
    bool_3 = False
    bool_4 = blood_sugar_algorithm_0.set_patient_medical_record(none_type_1, bool_3)
    assert bool_4 is True
    assert blood_sugar_algorithm_0.diabetes_type_2 is False
    assert module_1.MINYEAR == 1
    assert module_1.MAXYEAR == 9999
    bool_5 = True
    bool_6 = blood_sugar_algorithm_0.set_patient_medical_record(bool_5, bool_5)
    assert bool_6 is True
    blood_sugar_algorithm_0.diabetic_persons_bs(none_type_0)

@pytest.mark.xfail
def test_case_13():
    none_type_0 = None
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    bool_0 = False
    bool_1 = True
    str_0 = blood_sugar_algorithm_0.normal_person_bs(none_type_0)
    assert str_0 == 'SCBSN000'
    bool_2 = blood_sugar_algorithm_0.set_patient_medical_record(bool_0, bool_1)
    assert bool_2 is True
    assert blood_sugar_algorithm_0.diabetes_type_2 is True
    blood_sugar_algorithm_0.diabetic_persons_bs(none_type_0)