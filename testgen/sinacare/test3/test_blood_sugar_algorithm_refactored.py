# Automatically generated by Pynguin.
import pytest
import blood_sugar_algorithm_refactored as module_0

@pytest.mark.xfail
def test_case_0():
    int_0 = 4801
    none_type_0 = None
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    int_1 = 583
    str_0 = '\n{PDq&4!Y)'
    module_0.BloodSugar(int_0, int_1, str_0, none_type_0)

def test_case_1():
    int_0 = 237
    str_0 = 'FBS'
    none_type_0 = None
    blood_sugar_0 = module_0.BloodSugar(int_0, int_0, str_0, none_type_0)
    assert blood_sugar_0.blood_sugar == 237
    assert blood_sugar_0.temperature == 237
    assert blood_sugar_0.measure_state == 'FBS'
    assert blood_sugar_0.measure_time is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    bool_0 = blood_sugar_algorithm_0.check_prev_bs(blood_sugar_0)
    assert bool_0 is True

def test_case_2():
    none_type_0 = None
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    bool_0 = blood_sugar_algorithm_0.normal_person_bs(none_type_0)
    assert bool_0 is True

def test_case_3():
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']

@pytest.mark.xfail
def test_case_4():
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    blood_sugar_algorithm_0.init_data()

@pytest.mark.xfail
def test_case_5():
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    blood_sugar_algorithm_1 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_1.patient is None
    assert blood_sugar_algorithm_1.hypoglycemia is None
    assert blood_sugar_algorithm_1.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_1.abnormal_bs is None
    assert blood_sugar_algorithm_1.emergency_alarm is None
    assert blood_sugar_algorithm_1.bs_type is None
    assert blood_sugar_algorithm_1.new_measurement_required is None
    assert blood_sugar_algorithm_1.new_measurement_duration_min is None
    assert blood_sugar_algorithm_1.graphic_asset is None
    assert blood_sugar_algorithm_1.message_list == []
    assert blood_sugar_algorithm_1.last_bs is None
    none_type_0 = None
    blood_sugar_algorithm_0.run(none_type_0)

@pytest.mark.xfail
def test_case_6():
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    int_0 = -1174
    int_1 = -1564
    str_0 = '|tEEk$\rDo#ywh|_=R'
    none_type_0 = None
    module_0.BloodSugar(int_0, int_1, str_0, none_type_0)

@pytest.mark.xfail
def test_case_7():
    int_0 = 4828
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    none_type_0 = None
    str_0 = 'HZU17C*A4B*'
    int_1 = 323
    module_0.BloodSugar(int_1, int_0, str_0, none_type_0)

def test_case_8():
    int_0 = 237
    str_0 = 'FBS'
    none_type_0 = None
    blood_sugar_0 = module_0.BloodSugar(int_0, int_0, str_0, none_type_0)
    assert blood_sugar_0.blood_sugar == 237
    assert blood_sugar_0.temperature == 237
    assert blood_sugar_0.measure_state == 'FBS'
    assert blood_sugar_0.measure_time is None
    assert module_0.SPACE == ' '
    assert module_0.VALID_STATES == ['RBS', 'FBS', 'PBS', 'PLS', 'PDS']
    blood_sugar_algorithm_0 = module_0.BloodSugarAlgorithm()
    assert blood_sugar_algorithm_0.patient is None
    assert blood_sugar_algorithm_0.hypoglycemia is None
    assert blood_sugar_algorithm_0.persistent_hypoglycemia is None
    assert blood_sugar_algorithm_0.abnormal_bs is None
    assert blood_sugar_algorithm_0.emergency_alarm is None
    assert blood_sugar_algorithm_0.bs_type is None
    assert blood_sugar_algorithm_0.new_measurement_required is None
    assert blood_sugar_algorithm_0.new_measurement_duration_min is None
    assert blood_sugar_algorithm_0.graphic_asset is None
    assert blood_sugar_algorithm_0.message_list == []
    assert blood_sugar_algorithm_0.last_bs is None
    bool_0 = blood_sugar_algorithm_0.check_prev_bs(blood_sugar_0)
    assert bool_0 is True
    bool_1 = blood_sugar_algorithm_0.check_super_high_bs(blood_sugar_0)
    assert bool_1 is True